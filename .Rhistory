identify(ComplClusters)
windows()
identify(ComplClusters)
plot(ComplClusters)
windows()
plot(ComplClusters)
identify(ComplClusters)
?identify
?identify.hclust
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,5]))
?identify.hclust
??cluster
ComplClusters = hclust(distances, method = "complete")
windows()
plot(ComplClusters)
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,5]))
)
ComplClusters = hclust(distances, method = "complete")
windows()
plot(ComplClusters)
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,5]))
)
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,5], DEV.FUN = nD)))
windows()
plot(ComplClusters)
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,5], DEV.FUN = nD)))
dev.new()
nD <- dev.cur()
dev.set(dev.prev())
plot(ComplClusters)
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,c(1:200)], DEV.FUN = nD)))
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,"BUSINESS INTELLIGENCE"], DEV.FUN = nD)))
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,14], DEV.FUN = nD)))
identify(ComplClusters,  function(k) barplot(table(datafexam_ordered[k,1], DEV.FUN = nD)))
hist(datafexam_ordered)
hist(table(datafexam_ordered))
table(datafexam_ordered)
sum(datafexam_ordered[,1])
datafexam_ordered[,1]
sum(datafexam_ordered[,4])
sum(datafexam_ordered[,7])
sum(datafexam_ordered[,12])
sum(datafexam_ordered[,18])
sum(datafexam_ordered[,25])
sum(datafexam_ordered[,167])
apply(datafexam_ordered, 2, sum)
apply(datafexam_ordered, 2, sum) > 20
names(datafexam_ordered)
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) > 20]
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) > 100]
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) > 320]
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) > 321]
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) == 322]
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) == 20]
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) => 20]
names(datafexam_ordered)[apply(datafexam_ordered, 2, sum) >= 20]
names(datafexam_ordered)[apply(datafexam_ordered[,], 2, sum) >= 20]
names(datafexam_ordered)[apply(datafexam_ordered[1:100,], 2, sum) >= 20]
identify(ComplClusters,  function(k) names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20]))
function(k) names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20]
mostFollowed = function(k) names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20]
mostFollowed(1:200)
mostFollowed(1)
dev.new()
plot(ComplClusters)
identify(ComplClusters,  FUN = mostFollowed, DEV.FUN = nD)
identify(ComplClusters,  FUN = mostFollowed)
mostFollowed = function(k) return(names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20])
dev.new()
plot(ComplClusters)
identify(ComplClusters,  FUN = mostFollowed)
identify(ComplClusters,  FUN = mostFollowed)
dev.new()
plot(ComplClusters)
identify(ComplClusters,  FUN = mostFollowed)
identify(ComplClusters,  FUN = mostFollowed())
dev.new()
plot(ComplClusters)
identify(ComplClusters,  FUN = mostFollowed())
dev.new()
plot(ComplClusters)
identify(ComplClusters, mostFollowed())
mostFollowed(c(12:30, 78))
mostFollowed = function(k) names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20]
mostFollowed(c(12:30, 78))
identify(ComplClusters, function(k) names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20]))
identify(ComplClusters, function(k) names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20]) )
identify(ComplClusters, function(k) names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20]), )
identify(ComplClusters, mostFollowed())
identify(ComplClusters, FUN = function(k) return(k)))
identify(ComplClusters, FUN = function(k) return(k)), )
identify(ComplClusters, FUN = function(k) return(k) )
dev.new()
plot(ComplClusters)
identify(ComplClusters, FUN = function(k) return(k) )
identify(ComplClusters, FUN = function(k) print(k) )
mostFollowed = function(k) print(names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 20])
mostFollowed(1:200)
# Identifying clusters obtained with complete
dev.new()
plot(ComplClusters)
identify(ComplClusters, FUN = mostFollowed() )
identify(ComplClusters, mostFollowed())
mostFollowed = function(k) print(names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, sum) >= 30])
dev.new()
plot(ComplClusters)
identify(ComplClusters, mostFollowed())
dev.new()
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, mean)
# Plotting an interactive deindogram to see the courses
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, mean)
# Plotting an interactive deindogram to see the courses
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
names(datafexam_ordered)[apply(datafexam_ordered[k,], 2, mean)
)
names(datafexam_ordered)[apply(datafexam_ordered, 2, mean)]
names(datafexam_ordered)[apply(datafexam_ordered, 2, mean) >= 30]
apply(datafexam_ordered, 2, mean)
names(datafexam_ordered)[apply(datafexam_ordered, 2, mean) >= 0.8]
names(datafexam_ordered)[apply(datafexam_ordered, 2, mean) >= 0.99]
names(datafexam_ordered)[apply(datafexam_ordered, 2, mean) >= 0.8]
mostFollowed = function(k) print(names(datafexam_ordered)[apply(datafexam_ordered, 2, mean) >= 0.8])
mostFollowed(1:100)
mostFollowed(1:200)
apply(datafexam_ordered, 2, mean) >= percentage
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered, 2, mean) >= percentage
course_names = names(datafexam_ordered)[is_popular]
print(coursenames)
}
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered, 2, mean) >= percentage
course_names = names(datafexam_ordered)[is_popular]
print(course_names)
}
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered, 2, mean) >= percentage
course_names = names(datafexam_ordered[k, ])[is_popular]
print(course_names)
}
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered, 2, mean) >= percentage
course_names = names(datafexam_ordered[k, ])[is_popular]
print(course_names)
}
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k){
is_popular = apply(datafexam_ordered, 2, mean) >= 0.8
course_names = names(datafexam_ordered[k, ])[is_popular]
print(course_names)
}
mostFollowed = function(k){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= 0.8
course_names = names(datafexam_ordered)[is_popular]
print(course_names)
}
mostFollowed = function(k){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= 0.8
course_names = names(datafexam_ordered)[is_popular]
print(course_names)
}
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage
course_names = names(datafexam_ordered)[is_popular]
print(course_names)
}
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage
course_names = names(datafexam_ordered)[is_popular]
print(course_names)
}
# Plotting an interactive deindogram to see the courses
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
"ciao" + "ok"
"ciao"*10
rep("ciao", 10)
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
print("\n__________________________________________________\n")
}
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("__________________________________________________")
}
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("__________________________________________________")
}
plot(ComplClusters)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("__________________________________________________________________________")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
image(as.matrix(datafexam_ordered), xlab = "Matricole", ylab = "Esami", col = c("white", "red"))
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed(, percentage = 0.6))
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) <= percentage # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("____________________________________________________________________")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.8){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage &  apply(datafexam_ordered[k, ], 2, mean) <= 0.3 # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("____________________________________________________________________")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("____________________________________________________________________")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
is_popular = apply(datafexam_ordered[k, ], 2, mean) >= percentage # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("____________________________________________________________________")
}
# Plotting an interactive deindogram to see the courses
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
k = 1:200
apply(datafexam_ordered[k, ], 2, mean)
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
print(course_names)
cat("____________________________________________________________________")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
course_names = names(datafexam_ordered)[is_popular] # returning their names
popular_freq = course_freq[is_popular]
print(popular_freq)
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
print(order(course_freq[is_popular]))
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
print(course_freq(order(course_freq[is_popular])))
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
print(course_freq[order(course_freq[is_popular])])
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
print(course_freq[is_popular])
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
most_followed = course_freq[is_popular]
most_followed_ordered = most_followed[order(course_freq[is_popular])]
print(most_followed_ordered)
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed)
?order
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
most_followed = course_freq[is_popular]
most_followed_ordered = most_followed[order(course_freq[is_popular], decreasing = T)]
print(most_followed_ordered)
print(most_followed)
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(datafexam_ordered[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
most_followed = course_freq[is_popular] # selection of the courses
most_followed_ordered = most_followed[order(course_freq[is_popular], decreasing = T)] # ordering
print(most_followed_ordered)
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
ls.rm(k)
rm(k)
nD
rm(nD)
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
dev.new()
# Plotting an interactive deindogram to see the courses
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
library(ape)
install.packages("ape")
plot(as.phylo(ComplClusters),type="fan")
library(ape)
plot(as.phylo(ComplClusters),type="fan")
plot(as.phylo(ComplClusters),type="fan")
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
plot(as.phylo(ComplClusters),type="fan", labels = F)
install.packages("dendextend")
install.packages("circlize")
library(dendextend)
library(circlize)
# create a dendrogram
dend <- as.dendrogram(ComplClusters)
# modify the dendrogram to have some colors in the branches and labels
dend <- dend %>%
color_branches(k=4) %>%
color_labels
# plot the radial plot
par(mar = rep(0,4))
# circlize_dendrogram(dend, dend_track_height = 0.8)
circlize_dendrogram(dend, labels_track_height = NA, dend_track_height = .4)
circlize_dendrogram(dend, dend_track_height = 0.8)
?circlize_dendrogram
circlize_dendrogram(dend, labels_track_height = NA, dend_track_height = .4, labels = FALSE)
names(datafexam_ordered)
carriere <- read_excel("D:/Box Sync/#UNI/Materiale tesi/Analysis/carriere.xlsx", sheet = "Foglio2")
library(readxl)
carriere <- read_excel("D:/Box Sync/#UNI/Materiale tesi/Analysis/carriere.xlsx", sheet = "Foglio2")
carriere <- read_excel("D:/Box Sync/#UNI/Materiale tesi/Analysis/ThesisAnalysis/carriere.xlsx", sheet = "Foglio2")
View(carriere)
carriere[i,5]
carriere[i, 2]
i = 10
carriere[i, 2]
carriere[i, 1]
carriere[i,5]
for(i in 1:nrow(carriere)){
if (!is.na(carriere$`Data laurea`[i])){ # if the student is graduated
mat = carriere[i, 1]
#cod = carriere[i, 2]
immyear = carriere[i,5]
datafexam_ordered[mat, "immyear"] = immyear
}
}
mat = carriere[i, 1]
mat
immyear = carriere[i,5]
immyear
datafexam_ordered[mat, "immyear"] = immyear
View(datafexam_ordered)
datafexam_ordered["0000652354",]
datafexam_ordered["0000652354","immyear"]
datafexam_ordered["0000652354","immyear"] = 1
datafexam_ordered[mat, "immyear"] = immyear
View(datafexam_ordered)
immyear
as.numeric(immyear)
datafexam_ordered[mat, "immyear"] = as.numeric(immyear)
datafexam_ordered[mat, "immyear"] = 2012
datafexam_ordered["0000652354","immyear"] = 1
mat
datafexam_ordered[mat, "immyear"]
mat = laureati[i, 1]
datafexam[mat, exam]
exam = laureati[i, 3]
datafexam[mat, exam]
mat
remove.packages("ape", lib="~/R/win-library/3.3")
type(mat)
str(type)
str(mat)
for(i in 1:nrow(laureati)){
mat = laureati[i, 1]
cod = laureati[i, 2]
exam = laureati[i, 3]
datafcod[mat, cod] = 1
datafexam[mat, exam] = 1
}
class(mat)
class(laureati[1,1])
datafexam_ordered[as.character(mat), "immyear"] = 2012
class(laureati[1,1])
immyear
carriere <- read_excel("D:/Box Sync/#UNI/Materiale tesi/Analysis/ThesisAnalysis/carriere.xlsx", sheet = "Foglio2")
library(readxl)
carriere <- read_excel("D:/Box Sync/#UNI/Materiale tesi/Analysis/ThesisAnalysis/carriere.xlsx", sheet = "Foglio2")
View(carriere)
immyear = carriere[i,5]
immyear
datafexam_ordered[mat, "immyear"] = immyear
for(i in 1:nrow(carriere)){
if (!is.na(carriere$`Data laurea`[i])){ # if the student is graduated
mat = carriere[i, 1]
#cod = carriere[i, 2]
immyear = carriere[i,5]
datafexam_ordered[mat, "immyear"] = immyear
}
}
datafexam_ordered$immyear
plot(ComplClusters, labels = datafexam_ordered$immyear)
plot(ComplClusters, labels = F)
plot(ComplClusters, labels = datafexam_ordered$immyear)
datafexam_ordered$immyear
plot(ComplClusters, labels = datafexam_ordered$immyear)
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
image(as.matrix(datafexam_ordered), xlab = "Matricole", ylab = "Esami", col = c("white", "red"))
datafexam_ordered = datafexam[order(colnames(datafexam))]
image(as.matrix(datafexam_ordered), xlab = "Matricole", ylab = "Esami", col = "red")
datafexam_ordered[is.na(datafexam_ordered)] = 0
image(as.matrix(datafexam_ordered), xlab = "Matricole", ylab = "Esami", col = c("white", "red"))
for(i in 1:nrow(carriere)){
if (!is.na(carriere$`Data laurea`[i])){ # if the student is graduated
mat = carriere[i, 1]
#cod = carriere[i, 2]
immyear = carriere[i,5]
datafexam_ordered[mat, "immyear"] = immyear
}
}
other_info[,"immyear"] = datafexam_ordered[,"immyear"]
other_info = data.frame()
other_info[,"immyear"] = datafexam_ordered[,"immyear"]
other_info = data.frame(datafexam_ordered[,"immyear"])
other_info
other_info = data.frame(NULL)
other_info = data.frame(NULL)
row.names(datafexam_ordered)
other_info = data.frame(row.names = row.names(datafexam_ordered))
other_info
other_info
other_info[,"immyear"] = datafexam_ordered[,"immyear"]
other_info
other_info["0000652111",]
datafexam_ordered["0000652111",]
other_info
datafexam_ordered[is.na(datafexam_ordered)] = 0
image(as.matrix(datafexam_ordered), xlab = "Matricole", ylab = "Esami", col = c("white", "red"))
plot(ComplClusters, labels = F)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
plot(ComplClusters, labels = other_info$immyear)
datafexam_ordered = datafexam[order(colnames(datafexam))]
image(as.matrix(datafexam_ordered), xlab = "Matricole", ylab = "Esami", col = "red")
datafexam_ordered[is.na(datafexam_ordered)] = 0
image(as.matrix(datafexam_ordered), xlab = "Matricole", ylab = "Esami", col = c("white", "red"))
plot(ComplClusters, labels = other_info$immyear)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
names(datafexam_ordered)
?write.csv
write.csv(datafexam_ordered, file = "backupmatrice3-05.csv")
names(datafexam_ordered)
names(datafexam_ordered)
