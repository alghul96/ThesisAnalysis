agnes(distances, diss = TRUE, method = "Ward")
agnes(distances, diss = TRUE, method = "ward")
WardClusters = agnes(distances, diss = TRUE, method = "ward")
WardClusters$height
WardClusters$order
WardClusters$merge
WardClusters$merge[27, ]
WardClusters$merge[9, ]
WardClusters$height[27]
2/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2))
2/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))))
2/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))))
sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean)
)
)
sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean)))
sqrt(6.5)
WardClusters$height[27]
ComplClusters = agnes(distances, diss = TRUE, method = "complete")
plot(ComplClusters, labels = other_info$immyear)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
plot(ComplClusters, labels = other_info$immyear)
plot(WardClusters, labels = other_info$immyear)
identify(WardClusters, mostFollowed) # click over a branch to see the most followed courses!
WardClusters$clusters
WardClusters$cluster
WardClusters$clust
hist(cutree(ComplClusters, h = .83))
4/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))))
4/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean)))^2)
(t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean)
)
4/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2))
WardClusters$height[27]
sqrt(4/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2)))
sqrt(2/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2)))
sqrt( sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2)))
1/2 *sqrt( sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2)))
sqrt( 2/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2)))
WardClusters$height[27]
ter)
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))),
metric = "gower")
kmedoidsClusters = pam(distances, k = 4, diss = TRUE)
kmedoidsClusters = stepFlexclust(x = distances, k = 4, nrep = 1000, FUN = pam, multicore = TRUE)
library(flexclust)
library(fpc)
library(cluster)
pc = pamk(distances, krange=1:14, criterion="asw", diss = TRUE)
pc$pamobject$cluster
pc$pamobject$medoids
cluster.stats(distances, kmedoidsClusters$cluster)
cluster.stats(distances, kmedoidsClusters$cluster)
kgroup3 = pc$pamobject$cluster
kmedoidsClusters$cluster
kgroup_3 = pc$pamobject$cluster
kgroup_4 = kmedoidsClusters$cluster
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = kgroup_4)
library(rgl)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = kgroup_4)
open3d()
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = kgroup_3)
WardClusters$merge[27, ]
WardClusters$height[27]
distances[9]
distances
WardClusters$merge[27, ]
WardClusters$height[27]
cbind(
t(clusterdataf[222,]),
apply(clusterdataf[c(129,165),], 2, mean),
apply(clusterdataf[c(129,165),], 2, var))
WardClusters$merge[9, ]
cbind(
t(clusterdataf[c(129, 165,222),]),
apply(clusterdataf[c(129,165),], 2, mean),
apply(clusterdataf[c(129,165),], 2, var))
distances["0000365303", "0000364326"]
distances
distances[1,2]
distances[1]
distances["0000364326"]
(as.matrix(distances)["0000364326", "0000366086"])
as.matrix(distances)["0000364326", "0000366086"]
WardClusters$merge
WardClusters$height[9]
min(as.matrix(distances))
as.matrix(distances)
as.matrix(distances)[127]
as.matrix(distances)[127, 123]
WardClusters$merge[9, ]
as.matrix(distances)[129, 165]
WardClusters$height[27]
WardClusters$height[9]
as.matrix(distances)[129, 165]
as.matrix(distances)[129, 165]^2
sqrt(0.46)
0.46^2
ComplClusters$height[27]
min(as.matrix(distances)["0000364326", "0000366086"])
ComplClusters$height
ComplClusters$merge[27]
ComplClusters$merge
ComplClusters$merge[27]
clusterdataf[212,]
clusterdataf[212,]
as.matrix(distances)[0000366086]
as.matrix(distances)["0000366086"]
min(as.matrix(distances)["0000364326", "0000366086"])
as.matrix(distances)
as.matrix(distances)[202]
as.matrix(distances)[212]
WardClusters$merge[27, ]
WardClusters$height[27]
WardClusters$height[9]
WardClusters$merge[9, ]
as.matrix(distances)[129]
as.matrix(distances)[222]
0.74^2
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "gower")
names(distances)
distances$1
distances$0000364326
distances$"0000364326"
?daisy
distances$Types
attr(Size)
attr(distances, "Size")
attr(distances, "Size")
attr(distances, "Metric")
attr(distances, "Labels")
attr(distances, "Types")
print(distances)
summary(distances)
distances[51000]
as.data.frame(distances)
as.matrix(distances)
image(as.matrix(distances))
distances_matr = as.matrix(distances)
as.data.frame(distances_matr)
as.data.frame(distances_matr)["0000365303", "0000364326"]
27
WardClusters$merge[9, ]
WardClusters$height[9]
dim(distances_matr)
as.data.frame(distances_matr)[129, 165]
as.data.frame(distances_matr)[129, 165]
as.data.frame(distances_matr)[129, 165]^2
sqrt(as.data.frame(distances_matr)[129, 165])
WardClusters$height[9]
WardClusters$height
WardClusters$merge
as.data.frame(distances_matr)[181, 196]
as.data.frame(distances_matr)[38, 110]
as.data.frame(distances_matr)[129, 165]
WardClusters$height[1]
as.data.frame(distances_matr)[129, 165]
?agnes
identify(as.dendrogram(WardClusters), mostFollowed) # click over a branch to see the most followed courses!
plot(as.dendrogram(WardClusters), labels = other_info$immyear)
plot(WardClusters, labels = other_info$immyear)
hist(cutree(ComplClusters, h = .83))
hist(cutree(as.dendrogram(ComplClusters), h = .83))
as.dendrogram(ComplClusters)
as.dendrogram(WardClusters)
as.dendrogram(WardClusters)[1]
as.dendrogram(WardClusters)[[1]]
as.dendrogram(WardClusters)[[2]]
as.dendrogram(WardClusters)[[3]]
as.dendrogram(WardClusters)[[1]]
as.dendrogram(WardClusters)[[2]]
as.dendrogram(WardClusters)[[3]]
as.dendrogram(WardClusters)[1][1]
as.dendrogram(WardClusters)[[1]]
plot(WardClusters, labels = other_info$immyear)
as.dendrogram(WardClusters)[[1]]
as.dendrogram(WardClusters)[[2]]
as.dendrogram(WardClusters)[[2]]
hist(cutree(as.dendrogram(WardClusters)[[2]], h = .83))
hist(cutree(WardClusters, h = .83))
hist(cutree(WardClusters, h = .5))
as.dendrogram(WardClusters)[[2]]
as.dendrogram(WardClusters)[[1]]
as.dendrogram(WardClusters)[[1]][[1]]
as.dendrogram(WardClusters)[[1]][[2]]
cut(WardClusters)
WardClusters = agnes(distances, diss = TRUE, method = "ward", which.plot = 2)
plot(WardClusters, labels = other_info$immyear, which.plot = 2)
identify(WardClusters, mostFollowed) # click over a branch to see the most followed courses!
cutree(WardClusters, k = 2, h=0.3)
cutree(WardClusters, k = 3)
hgroups_3 = cutree(WardClusters, k = 3)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = hgroup_4)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = hgroup_3)
hgroup_3 = cutree(WardClusters, k = 3)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = hgroup_3)
open3d()
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = kgroup_3)
hgroup_3 = cutree(ComplClusters, k = 3)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = hgroup_3)
(WardClusters)[[2]]
(WardClusters)[[1]][[2]]
(WardClusters)[[1]][[1]]
(WardClusters)[[1]]
ComplClusters
plot(ComplClusters, labels = other_info$immyear, which.plot = 2)
hgroup_3 = cutree(ComplClusters, k = 5)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = hgroup_3)
hgroup_3 = cutree(ComplClusters, k = 8)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = hgroup_3)
hgroup_3 = cutree(WardClusters, k = 3)
pca_data$loadings[, 1:3]
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = hgroup_3)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = kgroup_3)
hgroup_3
mostFollowed(rownames(clusterdataf)[kgroup_3 == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup_3 == 1]) # Group 2
mostFollowed(rownames(clusterdataf)[hgroup_3 == 1]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup_3 == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup_3 == 3]) # Group 2
mostFollowed(rownames(clusterdataf)[hgroup_3 == ]) # Group 2
mostFollowed(rownames(clusterdataf)[hgroup_3 == 1]) # Group 2
mostFollowed(rownames(clusterdataf)[hgroup_3 == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[hgroup_3 == 3]) # Group 2
pc
pc$clusinfo
pc$[1]
pc[1]
pc[2]
pc[3]
pc[4]
pc[5]
pc$pamobject$cluster
pc$pamobject$medoids
cluster.stats(distances, kmedoidsClusters$cluster)
pc = pamk(distances, krange=1:14, criterion="asw", diss = TRUE)
pc
?pamk
pc = pamk(distances, krange=1:14, criterion="multiasw", diss = TRUE)
pc
pc = pamk(distances, krange = 1:14, criterion = "ch", diss = TRUE)
pc
?daisy
mona(clusterdataf)
apply(clusterdataf, 2, factor)
clusterdataf = apply(clusterdataf, 2, factor)
mona(clusterdataf)
View(clusterdataf)
as.data.frame(clusterdataf)
clusterdataf = as.data.frame(clusterdataf)
str(clusterdataf)
mona(clusterdataf)
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))),
metric = "gower")
names(str(clusterdataf))
names(str(clusterdataf))
str(clusterdataf)[1]
str(clusterdataf)[2]
str(clusterdataf)[[2]]
str(clusterdataf)[[1]]
str(clusterdataf)
clusterdataf = clusterdataf[, -c("GESTIONE DELL'INNOVAZIONE E DEI PROGETTI M")]
clusterdataf = clusterdataf[, "GESTIONE DELL'INNOVAZIONE E DEI PROGETTI M"]
clusterdataf = datafexam_ordered
clusterdataf = apply(clusterdataf, 2, factor)
clusterdataf = as.data.frame(clusterdataf)
str(clusterdataf)
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "gower")
WardClusters = hclust(distances, method = "ward.D") # threating the variables as numeric
ComplClusters = hclust(distances, method = "complete")
ComplClusters = agnes(distances, diss = TRUE, method = "complete")
WardClusters = agnes(distances, diss = TRUE, method = "ward")
plot(WardClusters, labels = other_info$immyear, which.plot = 2)
plot(ComplClusters, labels = other_info$immyear, which.plot = 2)
plot(WardClusters, labels = other_info$immyear, which.plot = 2)
WardClusters$merge[9, ]
WardClusters$merge[27, ]
clusterdataf = clusterdataf[, -c("GESTIONE DELL'INNOVAZIONE E DEI PROGETTI M")]
names(clusterdataf)
str(clusterdataf)
names(clusterdataf)
clusterdataf = clusterdataf[, -c(49, 83)]
str(clusterdataf)
mona(clusterdataf)
monaClusters = mona(clusterdataf)
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "gower")
ComplClusters = agnes(distances, diss = TRUE, method = "complete")
WardClusters = agnes(distances, diss = TRUE, method = "ward")
plot(ComplClusters, labels = other_info$immyear, which.plot = 2)
plot(WardClusters, labels = other_info$immyear, which.plot = 2)
kmedoidsClusters = pam(distances, k = 4, diss = TRUE)
kgroup_4 = kmedoidsClusters$cluster
pc = pamk(distances, krange = 1:14, criterion = "asw", diss = TRUE)
pc
summary(monaClusters)
plot(monaClusters)
plot(monaClusters)
?mona
plot(monaClusters)
mona$data
plot(monaClusters, sub = NULL)
plot(monaClusters, sub = NULL, col = c(2,0))
plot(monaClusters, sub = NULL, col = c(2,0),nmax.lab = 35)
plot(monaClusters, sub = NULL, col = c(2,0), nmax.lab = 2)
?daisy
attr(monaClusters, "data")
attr(monaClusters, "order")
monaClusters[[1]]
monaClusters[[2]]
monaClusters[[3]]
monaClusters[[order]]
monaClusters[["order"]]
monaClusters[["order.lab"]]
as.dendrogram(monaClusters[["order.lab"]])
data(animals)
plot(mona(animals))
plot(monaClusters, sub = NULL, col = c(2,0), nmax.lab = 2)
plot(monaClusters, col = c(2,0), nmax.lab = 2)
plot(monaClusters, col = c(2,0), nmax.lab = 2)
monaClusters[["order"]])
monaClusters[["order"]]
?mona
monaClusters[["step"]]
hist(monaClusters[["step"]])
shapiro.test(monaClusters[["step"]])
rownames(clusterdataf)
rownames(clusterdataf)[monaClusters[["step"]]]
monaClusters[["step"]]
rownames(clusterdataf)[monaClusters[["step"]]< 1]
monaClusters[["step"]] < 1
monaClusters[["step"]]
monaClusters[["step"]] < 1
monaClusters[["step"]]
rownames(clusterdataf)[monaClusters[["step"]]< 6]
mostFollowed(rownames(clusterdataf)[monaClusters[["step"]]< 6])
rownames(clusterdataf)[monaClusters[["step"]]< 6]
warnings()
mostFollowed(rownames(as.matrix(clusterdataf))[monaClusters[["step"]]< 6])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]]< 6])
rownames(datafexam_ordered)[monaClusters[["step"]]< 6]
clusterdataf = datafexam # select the dataframe to use for clustering
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]]< 6])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 13])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 8])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 12])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 6])
vector(names = c("a"))
monaClusters[["step"]] < 6
other_info[monaClusters[["step"]] < 6, "monGroups"] = 1
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 6 & monaClusters[["step"]] > 8])
[monaClusters[["step"]] < 6 & monaClusters[["step"]] > 8
monaClusters[["step"]] < 6 & monaClusters[["step"]] > 8
monaClusters[["step"]] > 6 & monaClusters[["step"]] < 8]
monaClusters[["step"]] > 6 & monaClusters[["step"]] < 8
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] > 6 & monaClusters[["step"]] < 8])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] > 6 & monaClusters[["step"]] < 9])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] > 9 )
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] > 9] )
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 6] )
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 8])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 8] )
38+90+194
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 6] )
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 9] )
other_info[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9] = 2
other_info[monaClusters[["step"]] < 6, "monGroups"] = 1
other_info[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9] = 2
monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9
other_info[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9], "monGroups"] = 2
other_info[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9, "monGroups"] = 2
other_info[rownames(datafexam_ordered)[monaClusters[["step"]] >= 9, "monGroups"] = 3
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 6] )
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 9])
other_info[rownames(datafexam_ordered)[monaClusters[["step"]] >= 9, "monGroups"] = 3
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] < 6] )
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 6 & monaClusters[["step"]] < 9])
mostFollowed(rownames(datafexam_ordered)[monaClusters[["step"]] >= 9])
other_info[monaClusters[["step"]] >= 9, "monGroups"] = 3
monagroup = other_info$monGroups
monagroup
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = monagroup)
other_info[monaClusters[["step"]] < 3, "monGroups"] = 1
other_info[monaClusters[["step"]] >= 3 & monaClusters[["step"]] < 9, "monGroups"] = 2
other_info[monaClusters[["step"]] >= 9, "monGroups"] = 3
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = monagroup)
rm(animals)
str(clusterdataf)
write.csv(clusterdataf, "Python/clusterdata.csv")
?write.csv
write.csv(clusterdataf, "Python/clusterdata.csv", row.names = FALSE)
install.packages("PythonInR")
library(PythonInR)
??PythonInR
autodetectPython()
BEGIN.Python()
asd
pyConnect()
library(PythonInR)
autodetectPython()
pyConnect()
pyExecfile('Python/mixtureclustering.py')
pyExecp("import mixturemodels")
pyExecp("import mixturemodels.py")
pyExecp("import Python/mixturemodels")
pyExecp("import 'Python/mixturemodels'")
pyExecfile('Python/mixtureclustering.py')
pyExit()
pyConnect()
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
pyExit()
library(PythonInR)
pyConnect()
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
library(rgl)
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExec("print modelclust")
pyExecfile('Python/mixtureclustering.py')
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExecfile('Python/mixtureclustering.py')
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExecfile('Python/mixtureclustering.py')
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExecfile('Python/mixtureclustering.py')
pyExec("print modelclust")
other_info["mixtgroup"] = pyGet("modelclust", simplify = FALSE) + 1
plot3d(pca_data$scores[, 1], pca_data$scores[, 2], pca_data$scores[, 3],
col = other_info[,3])
pyExit()
mixtgroup_3 = other_info["mixtgroup"]
mixtgroup_3 = as.vector(other_info["mixtgroup"])
mixtgroup_3
class(mixtgroup_3)
class(as.vector(other_info["mixtgroup"]))
mixtgroup_3 = as.vector.factor(other_info["mixtgroup"])
class(mixtgroup_3)
mixtgroup_3 = as.vector.factor(other_info["mixtgroup"])
mixtgroup_3 = as.vector(other_info["mixtgroup"])
class(mixtgroup_3)
mostFollowed(mixtgroup_3[mixtgroup_3 == 1])
mostFollowed(mixtgroup_3[mixtgroup_3 == 2])
mostFollowed(mixtgroup_3[mixtgroup_3 == 3])
mixtgroup_3 == 3
mostFollowed(datafexam[mixtgroup_3 == 3])
mostFollowed(mixtgroup_3[mixtgroup_3 == 3])
mostFollowed(mixtgroup_3[mixtgroup_3 == 2])
mostFollowed(mixtgroup_3[mixtgroup_3 == 1])
47 + 157 + 118
rownames(clusterdataf)
mostFollowed(rownames(clusterdataf)[mixtgroup_3 == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[mixtgroup_3 == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[mixtgroup_3 == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[mixtgroup_3 == 3]) # Group 3
