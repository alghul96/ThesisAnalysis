datafexam[is.na(datafexam)] = 0
image(as.matrix(datafexam), xlab = "Matricole", ylab = "Esami", col = c("white", "red"))
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "gower")
ComplClusters = hclust(distances, method = "complete")
clusterdataf = datafexam
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "gower")
ComplClusters = hclust(distances, method = "complete")
mostFollowed = function(k, percentage = 0.6){
course_freq = apply(clusterdataf[k, ], 2, mean)
is_popular = (course_freq >= percentage) & (course_freq <= 0.99) # seeing which courses are more frequent
most_followed = course_freq[is_popular] # selection of the courses
most_followed_ordered = most_followed[order(course_freq[is_popular], decreasing = T)] # ordering
print(length(k))
print(most_followed_ordered)
cat("____________________________________________________________________\n")
}
plot(ComplClusters, labels = other_info$immyear)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
library(dendextend)
library(circlize)
dend <- as.dendrogram(ComplClusters)
# modify the dendrogram to have some colors in the branches and labels
dend <- dend %>%
color_branches(k=4) %>%
color_labels
# plot the radial plot
par(mar = rep(0,4))
#circlize_dendrogram(dend, dend_track_height = 0.8)
circlize_dendrogram(dend, labels_track_height = NA, dend_track_height = .4, labels = other_info$immyear)
circlize_dendrogram(dend, labels_track_height = NA, dend_track_height = .4, labels = FALSE)
circlize_dendrogram(dend, labels_track_height = NA, labels = FALSE)
circlize_dendrogram(dend, labels_track_height = NA, dend_track_height = .9, labels = FALSE)
plot(ComplClusters, labels = other_info$immyear)
plot(ComplClusters, labels = other_info$immyear)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
distances = daisy(factor(clusterdataf),
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "gower")
clusterdataf
str(clusterdataf)
ComplClusters = hclust(distances, method = "single")
plot(ComplClusters, labels = other_info$immyear)
ComplClusters = hclust(distances, method = "average")
plot(ComplClusters, labels = other_info$immyear)
?hclust
ComplClusters = hclust(distances, method = "centroid")
plot(ComplClusters, labels = other_info$immyear)
ComplClusters = hclust(distances, method = "average")
plot(ComplClusters, labels = other_info$immyear)
ComplClusters = hclust(distances, method = "mcquitty")
plot(ComplClusters, labels = other_info$immyear)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
ComplClusters = hclust(distances, method = "complete")
plot(ComplClusters, labels = other_info$immyear)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
cbind(clusterdataf[,1], other_info)
?naiveBayes
??naiveBayes
install.packages(mclust)
install.packages("mclust")
library(mclust)
?mclust
?mclust
Mclust(clusterdataf)
finitmixtClusters = Mclust(clusterdataf)
summary(finitmixtClusters)
clusterdataf(head)
head(clusterdataf)
plot(finitmixtClusters)
plot(finitmixtClusters)
?MclustDR
MclustDR(clusterdataf)
MclustDR(finitmixtClusters)
MclustDA(finitmixtClusters)
summary(finitmixtClusters)
?summary.Mclust
finitmixtClusters = Mclust(clusterdataf, parameters = TRUE)
summary(finitmixtClusters)
summary(finitmixtClusters, parameters = TRUE)
summary(finitmixtClusters, classification = TRUE)
mod2 = Mclust(iris[,1:4], G = 1)
summary(mod2, parameters = TRUE, classification = TRUE)
finitmixtClusters = Mclust(clusterdataf, G = 3)
summary(finitmixtClusters, classification = TRUE)
finitmixtClusters = Mclust(clusterdataf, G = 5)
summary(finitmixtClusters, classification = TRUE)
rm(mod2)
finitmixtClusters$data
finitmixtClusters$call
finitmixtClusters$modelName
finitmixtClusters$G
finitmixtClusters$n
finitresults = summary(finitmixtClusters, classification = TRUE)
finitresults$classification
hist(finitresults$classification)
rm(finitmixtClusters)
rm(finitresults)
library(stats)
clusterdataf
str(clusterdataf)
kmeans(clusterdataf, centers = 4)
kmeans(clusterdataf, centers = 4)$centers
kmeans(clusterdataf, centers = 4)
kmeans(clusterdataf, centers = 4)
kmeansClusters = kmeans(clusterdataf, centers = 4)
plot(kmeansClusters)
kmeansClusters$centers
kmeansClusters$betweenss
summary(kmeansClusters)
summary(kmeansClusters)$cluster
kmeansClusters$cluster
kmeansClusters = kmeans(clusterdataf, centers = 1)
kmeansClusters$cluster
kmeansClusters$centers
print(kmeansClusters)
plot(clusterdataf, col = kmeansClusters$cluster)
plot(clusterdataf, col = kmeansClusters$cluster)
plot(clusterdataf[1:12,], col = kmeansClusters$cluster[1:12])
plot(clusterdataf[,1:10], col = kmeansClusters$cluster)
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 25)
kmeansClusters$centers
kmeansClusters$centers[1]
kmeansClusters$centers[1,]
kmeansClusters$centers[1,] > 0.6
kmeansClusters$centers[kmeansClusters$centers[1,] > 0.6]
names(kmeansClusters$centers[1,] > 0.6)
kmeansClusters$centers[1,] > 0.6
names(clusterdataf)[kmeansClusters$centers[1,] > 0.6]
mostFollowed(kmeansClusters$cluster)
kmeansClusters$cluster
kmeansClusters$cluster==1
names(kmeansClusters$cluster==1)
mostFollowed(names(kmeansClusters$cluster==1))
kmeansClusters$cluster==1
kgroup = kmeansClusters$cluster
kgroup == 1
names(kgroup)
rownames(clusterdataf)
rownames(clusterdataf)[kgroup == 1]
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
plot(kgroup)
hist(kgroup)
hist(kgroup, bins = 5)
?hist
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5)
kgroup = kmeansClusters$cluster
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 10)
kgroup = kmeansClusters$cluster
hist(kgroup, breaks = 5)
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 22)
kgroup = kmeansClusters$cluster
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kgroup = kmeansClusters$cluster
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 1000)
kgroup = kmeansClusters$cluster
hist(kgroup, breaks = 5)
kgroup = kmeansClusters$cluster
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
?kmeans
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 20)
kgroup = kmeansClusters$cluster
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 25)
kgroup = kmeansClusters$cluster
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 25)
# Cluster of each instance
kgroup = kmeansClusters$cluster
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5, iter.max = 25)
# Cluster of each instance
kgroup = kmeansClusters$cluster
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5)
kgroup = kmeansClusters$cluster
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5)
# Cluster of each instance
kgroup = kmeansClusters$cluster
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5)
# Cluster of each instance
kgroup = kmeansClusters$cluster
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5)
# Cluster of each instance
kgroup = kmeansClusters$cluster
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = kmeans(clusterdataf, centers = 5)
# Cluster of each instance
kgroup = kmeansClusters$cluster
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
install.packages("flexclust")
library(flexclust)
?cclust
cclust(clusterdataf, k = 5)
kmeansClusters = cclust(clusterdataf, k = 5)
kmeansClusters
summary(kmeansClusters)
hist(kgroup, breaks = 5)
clusters(kmeansClusters)
kgroup = clusters(kmeansClusters)
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
kmeansClusters = kmeans(clusterdataf, centers = 5)
kgroup = kmeansClusters$cluster
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
kmeansClusters = cclust(clusterdataf, k = 5)
kgroup = clusters(kmeansClusters)
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
kmeansClusters = cclust(clusterdataf, k = 5)
kgroup = clusters(kmeansClusters)
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
kgroup = kmeansClusters$cluster
kmeansClusters = kmeans(clusterdataf, centers = 5)
kgroup = kmeansClusters$cluster
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
kmeansClusters = cclust(clusterdataf, k = 5)
summary(kmeansClusters)
kmeansClusters = cclust(clusterdataf, k = 6)
summary(kmeansClusters)
kmeansClusters = cclust(clusterdataf, k = 3)
summary(kmeansClusters)
kmeansClusters = cclust(clusterdataf, k = 2)
summary(kmeansClusters)
kmeansClusters = cclust(clusterdataf, k = 4)
summary(kmeansClusters)
kmeansClusters = cclust(clusterdataf, k = 4)
summary(kmeansClusters)
kmeansClusters = cclust(clusterdataf, k = 5)
summary(kmeansClusters)
kgroup = clusters(kmeansClusters)
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = cclust(clusterdataf, k = 5)
summary(kmeansClusters)
# Cluster of each instance
# kgroup = kmeansClusters$cluster
kgroup = clusters(kmeansClusters)
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = cclust(clusterdataf, k = 5)
summary(kmeansClusters)
# Cluster of each instance
# kgroup = kmeansClusters$cluster
kgroup = clusters(kmeansClusters)
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = cclust(clusterdataf, k = 5)
summary(kmeansClusters)
# Cluster of each instance
# kgroup = kmeansClusters$cluster
kgroup = clusters(kmeansClusters)
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = cclust(clusterdataf, k = 5)
summary(kmeansClusters)
# Cluster of each instance
# kgroup = kmeansClusters$cluster
kgroup = clusters(kmeansClusters)
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
kmeansClusters = cclust(clusterdataf, k = 5)
summary(kmeansClusters)
# Cluster of each instance
# kgroup = kmeansClusters$cluster
kgroup = clusters(kmeansClusters)
# Most seen exams in each group
mostFollowed(rownames(clusterdataf)[kgroup == 1]) # Group 1
mostFollowed(rownames(clusterdataf)[kgroup == 2]) # Group 2
mostFollowed(rownames(clusterdataf)[kgroup == 3]) # Group 3
mostFollowed(rownames(clusterdataf)[kgroup == 4]) # Group 4
mostFollowed(rownames(clusterdataf)[kgroup == 5]) # Group 5
hist(kgroup, breaks = 5)
summary(kmeansClusters)
withinss
kmeansClusters$withinss
kmeansClusters@withinss
kmeansClusters@centers
Silhouette(kmeansClusters)
?Silhouette()
kcenters = kmeansClusters@totaldist
kcenters = kmeansClusters@centers
dist(kcenters)
Daisy(kcenters)
daisy(kcenters)
library(cluster)
daisy(kcenters)
daisy(kcenters, metric = "manhattan") # distances beetween the cluster centers
?daisy
?stepFlexclust
stepFlexclust(clusterdataf)
library(flexclust)
library(cluster)
daisy(kcenters, metric = "manhattan") # distances beetween the cluster centers
stepFlexclust(clusterdataf)
stepFlexclust(clusterdataf, k = 5)
stepFlexclust(clusterdataf, k = 10)
stepFlexclust(clusterdataf, k = 5)
stepFlexclust(clusterdataf, k = 5, FUN = cclust)
stepFlexclust(clusterdataf, k = 5, FUN = cclust)
stepFlexclust(clusterdataf, k = 5, FUN = cclust)
stepFlexclust(clusterdataf, k = 5, nrep = 1000, FUN = cclust)
kmeansClusters_rep = stepFlexclust(clusterdataf, k = 5, nrep = 1000, FUN = cclust, multicore = TRUE)
kmeansClusters_rep
kmeansClusters_rep@centers
rownames(clusterdataf)[kgroup == 1]
kcenters = kmeansClusters_rep@centers
daisy(kcenters, metric = "manhattan") # distances beetween the cluster centers
View(kcenters)
kcenters = kmeansClusters@centers
kcenters = kmeansClusters_rep@centers
daisy(kcenters, metric = "manhattan") # distances beetween the cluster centers
daisy(kcenters, metric = "manhattan")
kmeansClusters_rep
clusters(kmeansClusters_rep)
?getModel
kmeansClusters_rep = stepFlexclust(clusterdataf, k = 3:8, nrep = 1000, FUN = cclust, multicore = TRUE)
cclust(clusterdataf, k = 3:5)
cclust(clusterdataf, k = 5)
kmeansClusters_rep = stepFlexclust(clusterdataf, k = 3:8, nrep = 500, FUN = cclust, multicore = TRUE)
kmeansClusters_rep
plot(kmeansClusters_rep)
getModel(kmeansClusters_rep)
getModel(kmeansClusters_rep, 4)
getModel(kmeansClusters_rep, 2)
getModel(kmeansClusters_rep, 3)
kmeansClusters_rep
kmeansClusters_rep[[5]]
kmeansClusters_rep[[5]] # works as a list
plot(ComplClusters, labels = other_info$immyear)
identify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!
split(clusterdataf, cutree_1k.dendrogram(5))
as.data.frame()
cutree_1k.dendrogram()
?cutree
library(stats)
cutree(ComplClusters, k = 5)
hist(cutree(ComplClusters, k = 5))
hist(cutree(ComplClusters, h = .86))
hist(cutree(ComplClusters, h = .8))
hist(cutree(ComplClusters, h = .84))
hist(cutree(ComplClusters, h = .83))
kmeansClusters_rep
daisy(kmeansClusters_rep[[8]]@centers)
kmeansClusters_rep[[8]]
kmeansClusters_rep[[5]] # works as a list
daisy(kmeansClusters_rep[[6]]@centers)
kmeansClusters_rep[[6]]
daisy(kmeansClusters_rep[[6]]@centers, metric = "manhattan")
clusterdistances = daisy(kmeansClusters_rep[[6]]@centers, metric = "manhattan")
hclust(clusterdistances, method = "complete")
plot(hclust(clusterdistances, method = "complete"))
plot(hclust(clusterdistances, method = "single"))
plot(hclust(clusterdistances, method = "complete"))
plot(hclust(clusterdistances, method = "ward"))
plot(hclust(clusterdistances, method = "ward"))
plot(hclust(clusterdistances, method = "ward.D"))
clusterdistances = daisy(kmeansClusters_rep[[4]]@centers, metric = "manhattan")
plot(hclust(clusterdistances, method = "ward.D"))
clusterdistances = daisy(kmeansClusters_rep[[2]]@centers, metric = "manhattan")
plot(hclust(clusterdistances, method = "ward.D"))
clusterdistances = daisy(kmeansClusters_rep[[6]]@centers, metric = "manhattan")
plot(hclust(clusterdistances, method = "ward.D"))
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "manhattan")
distances = daisy(clusterdataf,
type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries
metric = "gower")
ComplClusters = hclust(distances, method = "complete")
plot(ComplClusters, labels = other_info$immyear)
ComplClusters = hclust(distances, method = "ward.D")
plot(ComplClusters, labels = other_info$immyear)
?ward.D
?Compl.Clusters
?Compl.Clusters
hclust()
?hclust
WardClusters = hclust(distances, method = "Ward.D")
WardClusters = hclust(distances, method = "ward.D")
distances
plot(WardClusters, labels = other_info$immyear)
identify(WardClusters, mostFollowed) # click over a branch to see the most followed courses!
plot(hclust(clusterdistances, method = "ward.D"))
identify(hclust(clusterdistances, method = "ward.D"), mostFollowed)
