voti = read_excel("data/laureati.xls", sheet = "descrittiva") # import of the third recode
head(voti)
voti = read_excel("data/laureati.xls", sheet = "descrittiva") # import of the third recode
head(voti)
head(laureati)
head(as.data.frame(voti))
voti = as.data.frame(voti)
head(laureati)
laureati$matricola == voti$matricola
voti$matricola
voti$matricola in laureati$matricola
voti$matricola
voti$matricola in 1
if(voti$matricola in laureati$matricola)
voti$matricola %in% laureati$matricola
voti[voti$matricola %in% laureati$matricola]
voti[voti$matricola %in% laureati$matricola, ]
dim(voti[voti$matricola %in% laureati$matricola, ])
dim(voti)
for(i in 1:length(voti))
{}
voti[i,]
for(i in 1:length(voti)){
voti[i,]
}
for(i in 1:length(voti)){
voti[i,]
}
for(i in 1:length(voti)){
cat(voti[i,])
}
print(voti[i,])
for(i in 1:length(voti)){
print(voti[i,])
}
for(i in 1:length(voti)){
print(voti[i,])
}
for(i in 1:nrow(voti)){
print(voti[i,])
}
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if(laureati$matricola == voti$matricola)
print(k, i)
}
}
warnings()
laureati$matricola[i]
laureati$matricola[1243]
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if(laureati$matricola[i] == voti$matricola[k])
print(k, "", i)
}
}
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if(laureati$matricola[i] == voti$matricola[k])
print(k, i)
}
}
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if(laureati$matricola[i] == voti$matricola[k])
print(laureati$matricola[i])
}
}
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
print(laureati[i])
}
}
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
print(laureati[i,])
}
}
laureati_voti = data.frame(NULL)
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i] = cbind(laureati$matricola[i,], voti[k,"voto"])
}
}
laureati_voti = data.frame(NULL)
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i,] = cbind(laureati$matricola[i,], voti[k,"voto"])
}
}
laureati_voti = data.frame(NULL, ncol = 4)
laureati_voti = data.frame(NULL)
laureati_voti
?data.frame
laureati_voti = data.frame("Mat", "ASD")
laureati_voti
voti[k,"voto"]
laureati_voti = data.frame("Mat", "cod", "deno", "voto")
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i,] = cbind(laureati$matricola[i,], voti[k,"voto"])
}
}
laureati_voti = data.frame("Mat", "cod", "deno", "voto")
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i,] = cbind(laureati[i,], voti[k,"voto"])
}
}
laureati_voti
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
print(cbind(laureati[i,], voti[k,"voto"]))
}
}
laureati_voti = NULL
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i] = print(cbind(laureati[i,], voti[k,"voto"]))
}
}
laureati_voti
laureati_voti = NULL
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i] = (cbind(laureati[i,], voti[k,"voto"]))
}
}
laureati_voti
laureati_voti = NULL
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, ] = (cbind(laureati[i,], voti[k,"voto"]))
}
}
laureati_voti = matrix(nrow = nrow(laureati), ncol = 4)
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, ] = (cbind(laureati[i,], voti[k,"voto"]))
}
}
laureati_voti = matrix(nrow = nrow(laureati), ncol = 4)
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i] = (cbind(laureati[i,], voti[k,"voto"]))
}
}
laureati_voti
laureati_voti = laureati
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = (cbind(laureati[i,], voti[k,"voto"]))
}
}
laureati_voti
head(laureati_voti)
laureati_voti = laureati
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = voti[k,"voto"]
}
}
head(laureati_voti)
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = voti[k,"voto"]
cat(i/nrow(laureati))
}
}
laureati_voti = laureati
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = voti[k,"voto"]
print(i/nrow(laureati))
}
}
laureati_voti = laureati
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = voti[k,"voto"]
}
print(i/nrow(laureati)*100)
}
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = voti[k,"voto"]
}
print(i/nrow(laureati)*100)
}
laureati_voti = laureati
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = voti[k,"voto"]
}
print(i/nrow(laureati)*100)
}
head(laureati_voti)
laureati_voti$voto
laureati_voti = laureati
for(i in 1:nrow(laureati)){
for(k in 1:nrow(voti)){
if((laureati$matricola[i] == voti$matricola[k]) &  (laureati$`Materia Esame (cod)`[i] == voti$`Materia Esame (cod)`[k]))
laureati_voti[i, "voto"] = voti[k,"voto"]
}
print(i/nrow(laureati)*100)
}
laureati_voti
datafmarks = data.frame(NULL) # initializing the dataframe
for(i in 1:nrow(X)){
mat = laureati_voti[i, 1]
exam = laureati_voti[i, 3]
datafmarks[mat, exam] = laureati_voti[i, 4]
}
for(i in 1:nrow(laureati_voti)){
mat = laureati_voti[i, 1]
exam = laureati_voti[i, 3]
datafmarks[mat, exam] = laureati_voti[i, 4]
}
datafmarks
apply(datafmarks, 1, mean)
apply(datafmarks, 1, mean, na.rm = T)
length(apply(datafmarks, 1, mean, na.rm = T))
apply(datafmarks, 2, mean)
apply(datafmarks, 2, mean, na.rm = T)
datafmarks$`PROCESSI E TECNICHE DI DATA MINING M`
datafmarks[,`PROCESSI E TECNICHE DI DATA MINING M`]
datafmarks[,PROCESSI E TECNICHE DI DATA MINING M]
datafmarks[,"PROCESSI E TECNICHE DI DATA MINING M""]
]☺
datafmarks[,"PROCESSI E TECNICHE DI DATA MINING M"]
cbind(rownames(datafmarks), datafmarks$`PROCESSI E TECNICHE DI DATA MINING M`)
datafmarks$`CALCOLATORI ELETTRONICI M`
mean(datafmarks$`CALCOLATORI ELETTRONICI M`, na.rm = T)
apply(datafmarks, 2, mean, na.rm = T)
datafmarks$`CAMPI ELETTROMAGNETICI E SISTEMI D'ANTENNA M`
summary(datafmarks)
mean(datafmarks$`CALCOLATORI ELETTRONICI M`, na.rm = T)
apply(datafmarks, 2, mean, na.rm = T)
apply(datafmarks, 2, mean, na.rm = T)[1]
hist(datafmarks)
hist(datafmarks$`CALCOLATORI ELETTRONICI M`)
hist(datafmarks$`CALCOLATORI ELETTRONICI M`)
hist(datafmarks$`SISTEMI MOBILI M`)
hist(datafmarks$`FONDAMENTI DI INTELLIGENZA ARTIFICIALE M`)
hist(datafmarks$`CALCOLATORI ELETTRONICI M`)
hist(datafmarks$`FONDAMENTI DI INTELLIGENZA ARTIFICIALE M`)
hist(datafmarks$`ATTIVITÀ PROGETTUALE DI SICUREZZA DELL'INFORMAZIONE M`)
hist(datafmarks$sistemi `SISTEMI DISTRIBUITI M`)
hist(datafmarks$`SISTEMI DISTRIBUITI M`)
hist(datafmarks$`CALCOLATORI ELETTRONICI M`)
hist(datafmarks$`FONDAMENTI DI INTELLIGENZA ARTIFICIALE M`)
hist(datafmarks$`SISTEMI DISTRIBUITI M`)
hist(datafmarks$`CALCOLATORI ELETTRONICI M`)
hist(datafmarks$`CALCOLATORI ELETTRONICI M`, breaks = 30-18)
hist(datafmarks$`FONDAMENTI DI INTELLIGENZA ARTIFICIALE M`)
hist(datafmarks$`SISTEMI DISTRIBUITI M`, breaks = 30-18)
mean(datafmarks$`CALCOLATORI ELETTRONICI M`, na.rm = T)
apply(datafmarks, 1, mean, na.rm = T)
hist(apply(datafmarks, 1, mean, na.rm = T))
hist(apply(datafmarks, 1, mean, na.rm = T), breaks = 30-18)
hist(datafmarks$`SISTEMI DISTRIBUITI M`, breaks = 30-18)
apply(datafmarks, 2, mean, na.rm = T)
apply(datafmarks, 2, sd, na.rm = T)
apply(datafmarks, 2, median, na.rm = T)
boxplot(datafexam)
boxplot(datafexam[,1])
boxplot(datafexam[1,])
boxplot(t(datafexam[1,]))
boxplot(t(datafexam[,1]))
apply(datafmarks, 2, median, na.rm = T)
hist(apply(datafmarks, 2, median, na.rm = T))
hist(apply(datafmarks, 2, mean, na.rm = T))
hist(apply(datafmarks, 1, mean, na.rm = T), breaks = 30-18, main = "Istogramma per le medie degli studenti", col = "lightblue")
hist(apply(datafmarks, 1, mean, na.rm = T), breaks = 30-18, main = "Istogramma delle medie degli studenti", col = "lightblue", xlab = "Voto in trentesimi")
apply(datafmarks, 2, sd, na.rm = T)
apply(datafmarks, 2, mean, na.rm = T)
apply(datafmarks, 2, is.na)
apply(datafmarks, 2, sum(is.na))
apply(datafmarks, 2, sum)
apply(datafmarks, 2, sum, na.rm)
apply(datafmarks, 2, sum, na.rm = T)
apply(datafmarks, 2, count, na.rm = T)
apply(datafmarks, 2, is.na, na.rm = T)
apply(datafmarks, 2, frequency, na.rm = T)
library(plyr)
apply(datafmarks, 2, count, na.rm = T)
apply(datafmarks, 2, count)
apply(datafmarks, 2, count$NA)
apply(datafmarks, 2, ==NA)
apply(datafmarks, 2, count==NA)
cbind(
apply(datafmarks, 2, median, na.rm = T),
apply(datafmarks, 2, mean, na.rm = T),
apply(datafmarks, 2, sd, na.rm = T))
cbind(
apply(datafmarks, 2, median, na.rm = T),
apply(datafmarks, 2, mean, na.rm = T),
apply(datafmarks, 2, sd, na.rm = T))
write.csv(datafmarks, "voti.csv")
write.csv(cbind(
apply(datafmarks, 2, median, na.rm = T),
apply(datafmarks, 2, mean, na.rm = T),
apply(datafmarks, 2, sd, na.rm = T)), "riassunto.csv")
hist(datafmarks$`GESTIONE DELL'INNOVAZIONE E DEI PROGETTI M`, breaks = 30-18, main = "Voti di Gestione dell'Innovazione e dei Progetti")
par(mfrow = c(2,2))
hist(datafmarks$`GESTIONE DELL'INNOVAZIONE E DEI PROGETTI M`, breaks = 30-18, main = "Voti di Gestione dell'Innovazione e dei Progetti")
hist(datafmarks$`FONDAMENTI DI INTELLIGENZA ARTIFICIALE M`, breaks = 30-18, main = "Voti di Fondamenti di Intelligenza Artificiale")
hist(datafmarks$`SICUREZZA DELL'INFORMAZIONE M`, breaks = 30-18, main = "Sicurezza dell'Informazione")
hist(datafmarks$`LINGUAGGI E MODELLI COMPUTAZIONALI M`, breaks = 30-18, main = "Linguaggi e Modelli Computazionali")
datafexam_reduced
for(examA in colnames(datafexam)){
print(examA)
}
for(examA in colnames(datafexam)){
for(examB in colnames(datafexam)){
print(datafexam_reduced$examA == datafexam_reduced$examB)
}
}
datafexam_reduced$examA
for(examA in colnames(datafexam_reduced)){
for(examB in colnames(datafexam_reduced)){
print(datafexam_reduced[, examA] == datafexam_reduced[, examB])
}
}
print(datafexam_reduced[, 1] == datafexam_reduced[, 1])
print(datafexam_reduced[, 1] == datafexam_reduced[, 2])
print(datafexam_reduced[, 1] == datafexam_reduced[, 3])
for(examA in colnames(datafexam_reduced)){
for(examB in colnames(datafexam_reduced)){
print(sum(datafexam_reduced[, examA] == datafexam_reduced[, examB]))
}
}
for(examA in colnames(datafexam_reduced)){
for(examB in colnames(datafexam_reduced)){
frequency_comparison[examA, examB] = sum(datafexam_reduced[, examA] == datafexam_reduced[, examB] == 1)
}
}
frequency_comparison[examA, examB] = sum(datafexam_reduced[, examA] == datafexam_reduced[, examB] == rep(1,281))
rep(1,281)
rep(1,281) == datafexam_reduced[, examB]
rep(1,281) == datafexam_reduced[, 1]
(datafexam_reduced[, examA] == rep(1,281))
c(T, T, F)
c(T, T, F) | c(T, F, F)
c(T, T, F) & c(T, F, F)
for(examA in colnames(datafexam_reduced)){
for(examB in colnames(datafexam_reduced)){
frequency_comparison[examA, examB] = sum((datafexam_reduced[, examA] == rep(1,281)) & (datafexam_reduced[, examB] == rep(1,281)))
}
}
frequency_comparison = data.frame(NULL)
for(examA in colnames(datafexam_reduced)){
for(examB in colnames(datafexam_reduced)){
frequency_comparison[examA, examB] = sum((datafexam_reduced[, examA] == rep(1,281)) & (datafexam_reduced[, examB] == rep(1,281)))
}
}
frequency_comparison
write.csv(frequency_comparison, "Comparison_frequenze.csv")
apply(datafexam_reduced, 2, sum)
laureati
laureati
datafexam_reduced
datafmarks
laureati_voti
write.csv(laureati_voti, "Tabella con voti")
source("R/external_functions.R")
plot(results$ward)
plot(results$ward)
plot(results0$ward, labels = FALSE, main = "") # ward also seems to be well defined with 3 clusters
# medoids, centroids and prototypes comparison
par(mfrow = c(3,1))
image(round(t(results$kmeans@centers)), axes = FALSE, main = "K-means Centroids")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0")
image(mixtprototypes[, c(3,2,1)], axes = FALSE, main = "Mixture-Model Prototypes")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0")
image(t(clusterdataf[results$kmedoids[[1]]$medoids[c(2,1,3)], ]), axes = FALSE, main = "K-medoids Medoids")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0")
par(mfrow = c(1,1))
par(mfrow = c(3,1))
image(round(t(results$kmeans@centers)), axes = FALSE, main = "K-means Centroids")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", dim = 12)
?text
par(mfrow = c(3,1))
image(round(t(results$kmeans@centers)), axes = FALSE, main = "K-means Centroids")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 3)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 1.2)
totypes comparison
par(mfrow = c(3,1))
image(round(t(results$kmeans@centers)), axes = FALSE, main = "K-means Centroids")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 1.2)
image(mixtprototypes[, c(3,2,1)], axes = FALSE, main = "Mixture-Model Prototypes")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 1.2)
image(t(clusterdataf[results$kmedoids[[1]]$medoids[c(2,1,3)], ]), axes = FALSE, main = "K-medoids Medoids")
abline(h = c(.25, .75), col = 0)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 1.2)
par(mfrow = c(1,1))
comparison = cbind(exam_frequencies$ward[1:2], exam_frequencies$kmeans[2:1], exam_frequencies$kmedoids[1:2], exam_frequencies$mixture[1:2])
round(comparison, 2)
plot(results0$ward, labels = FALSE, main = "") # ward also seems to be well defined with 3 clusters
temp = clusterboot(datafexam, B = 500, clustermethod = kmeansCBI, krange = 3)
source("R/external_functions.R")
temp = clusterboot(datafexam, B = 500, clustermethod = kmeansCBI, krange = 3)
plot(temp)
rm(temp)
library(spatstat)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x = .8, y = seq(0, 1, l = 3), labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 1.2)
text(x =  seq(0, 1, l = 3), y = 120, labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 1.2)
text(x =  seq(0, 90, l = 3), y = 120, labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = 1.2)
text(x =  seq(0, 90, l = 3), y = 120, labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(0, 90, l = 3), y = 120, labels = c("Sist. e Reti", "Intell. Art.", "Vecchio Ord."), col = "0", cex = .8)
text(x =  seq(0, 90, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(0, 90, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
text(x =  seq(0, 90, l = 4), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(0, 90, l = 4), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(0, 90, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(0, 60, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(30, 90, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(5, 90, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(10, 90, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(12, 90, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(12, 80, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
plot(
as.im(as.matrix(exam_frequencies$mixture),
W = owin(c(1,90), c(1,140))),
main = "Courses Frequencies Between Clusters")
abline(v = c(30.5, 60.5), col = "white", lwd = 2)
text(x =  seq(12, 78, l = 3), y = 120, labels = c("Sist. e\n Reti", "Intell.\n Art.", "Vecchio\n Ord."), col = "0", cex = .8)
kmedgroup_3
length(kmedgroup_3)
dim(clusterdataf)
write.csv(cbind(clusterdataf, kmedgroup_3), file = "students.csv", row.names = F, col.names = F)
