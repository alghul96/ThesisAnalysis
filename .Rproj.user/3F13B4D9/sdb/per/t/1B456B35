{
    "collab_server" : "",
    "contents" : "#==========================================================#\n#                                                          #\n#                     SUMMARY SCRIPT                       #\n#                                                          #\n#==========================================================#\n\n\n# ========================================================= #\n# Analysis is performed on a binary dataset. The first part #\n# aims to convert a university dataset in a valid dataset.  #\n#                                                           #\n# Second part performs the analysis. Required functions are #\n# in the \"external_functions.R\".                            #\n# The required packages are listed below this box.          #\n# For the complete analysis in needed also Python 2.x       #\n# even though also Python 3.x might work (not tested)       #\n#                                                           #\n# The complete analysis can be found in the R folder.       #\n#                                                           #\n# ========================================================= #\n\nsource(\"R/external_functions.R\")\n# install.packages(c(\"readxl\", \"flexclust\", \"cluster\", \"fpc\", \"PythonInR\"))\n\n\n\n#### DATA PREPARATION ####\n\nlibrary(readxl)\nlaureati = read_excel(\"data/laureati.xls\", sheet = \"recode 3\") # import of the third recode\nlaureati = as.data.frame(laureati)\n\ndatafexam = convert_dataframe(laureati) # pay attention to the intial dataframe!\nimage(as.matrix(datafexam), xlab = \"Matricole\", ylab = \"Esami\", col = c(\"white\", \"red\")) # check of the dataframe\n\n\n# creation of another dataset for additional informations\nother_info = data.frame(row.names = row.names(datafexam))\nother_info[,\"immyear\"] = datafexam_ordered[,\"immyear\"]\n\n\n# reduced dataframe\ndatafexam_reduced = datafexam[as.numeric(row.names(datafexam)) > 390000, ] # Removing older students\nexams_frequencies_reduced = apply(datafexam_reduced, 2, mean)\ndatafexam_reduced = datafexam_reduced[, exams_frequencies_reduced > 0 & exams_frequencies_reduced < 1] # Removing unecessary exams\n\n\n\n\n#### CLUSTER ANALISYS ####\n\nsetwd(\"D:/Box Sync/#UNI/Materiale tesi/Analysis/ThesisAnalysis\")\n\n### Unkown number of clusters\n# Might take long time\nresults0 = studyplan_finder(\n          datafexam,\n          technique = list(\"k-means\", \"k-medoids\", \"ward\", \"prob\"),\n          nclust = 2:8, # results from 2 to 8 clusters\n          nsim = 500)  # results based on 500 simulation per method\n\n\nresults0$kmeans # we choose three clusters for k-means\n\nhist(results0$mixture$clusters) # mixture-model expectation maximization converged to three main clusters\n\nplot(results0$ward, labels = other_info$immyear) # ward also seems to be well defined with 3 clusters\nidentify(results0$ward, mostFollowed) # click over a branch to see the most followed courses!\n\n\n### With 3 clusters\n\nsetwd(\"D:/Box Sync/#UNI/Materiale tesi/Analysis/ThesisAnalysis\")\n\n# can take up to 16 minutes\nresults = studyplan_finder(\n          datafexam,\n          technique = list(\"k-means\", \"k-medoids\", \"ward\", \"prob\"),\n          nclust = 3, # results just for 3 clusters\n          nsim = 5000)  # results based on 5000 simulation per method\n\n\n# Saving the clusters into groups\n\nclustergroup =  data.frame(row.names = row.names(datafexam))\n\nclustergroup[,\"kmeans\"] = results$kmeans@cluster # those are from the k-means\nclustergroup[,\"mixture\"] = results$mixture$clusters # those are the clusters obtained from the mixture model\nclustergroup[,\"ward\"] = cutree(results$ward, k = 3)\nclustergroup[,\"kmedoids\"] = results$kmedoids[[1]]$clustering\n\n\n\n\n##### CLUSTERING PROCEDURE COMPARISON #####\n\n\n# Cluster frequencies between clustering procedures\npar(mfrow = c(2,2))\nfor(i in names(clustergroup)){\n  hist(clustergroup[,i], main = i)\n}\npar(mfrow = c(1,1))\n\n\n# Inside cluster exam frequencied for various methods\nexam_frequencies = list()\nfor(i in names(clustergroup)){\n  \n  cat(\"\\nInside cluster exam frequencies for\", i, \"clustering methods\\n\")\n  exam_frequencies[[i]] = mostFollowed_byclust(clustergroup = clustergroup[,i], X = datafexam, percentage = 0.6, graph = F)\n  \n  }\n\n\n# comparison of the exams frequencies beetween the clustering methods\ncomparison = cbind(exam_frequencies$ward[1:2], exam_frequencies$kmeans[2:1], exam_frequencies$kmedoids[1:2], exam_frequencies$mixture[1:2])\nround(comparison, 2)\n\n\n# medoids, centroids and prototypes comparison\npar(mfrow = c(3,1))\nimage(round(t(results$kmeans@centers)), axes = FALSE, main = \"K-means Centroids\")\nabline(h = c(.25, .75), col = 0)\ntext(x = .8, y = seq(0, 1, l = 3), labels = c(\"Sist. e Reti\", \"Intell. Art.\", \"Vecchio Ord.\"), col = \"0\")\n\nimage(mixtprototypes[, c(3,2,1)], axes = FALSE, main = \"Mixture-Model Prototypes\")\nabline(h = c(.25, .75), col = 0)\ntext(x = .8, y = seq(0, 1, l = 3), labels = c(\"Sist. e Reti\", \"Intell. Art.\", \"Vecchio Ord.\"), col = \"0\")\n\nimage(t(clusterdataf[results$kmedoids[[1]]$medoids,]), axes = FALSE, main = \"K-medoids Medoids\")\nabline(h = c(.25, .75), col = 0)\ntext(x = .8, y = seq(0, 1, l = 3), labels = c(\"Sist. e Reti\", \"Intell. Art.\", \"Vecchio Ord.\"), col = \"0\")\n\n\n\n\n#### COMPOSIZIONE DEI CLUSTER ####\n\nlibrary(spatstat)\n\nplot(\n  as.im(as.matrix(exam_frequencies$mixture), \n        W = owin(c(1,90), c(1,140))),\n  main = \"Courses Frequencies Beetween Clusters\")\nabline(v = c(30.5, 60.5), col = \"white\", lwd = 2)\n\n\n# We see that the third cluster is made by people enrolled before 2012\ntable(other_info[,1], clustergroup[,3])\n\nmost_frequented_byclust = exam_frequencies$mixture[apply(exam_frequencies$mixture, 1, sum) > 0.3,]\nmost_frequented_byclust\n\n\n",
    "created" : 1496935267189.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1280260522",
    "id" : "1B456B35",
    "lastKnownWriteTime" : 1497006768,
    "last_content_update" : 1497006768703,
    "path" : "D:/Box Sync/#UNI/Materiale tesi/Analysis/ThesisAnalysis/auto_analysis.R",
    "project_path" : "auto_analysis.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}