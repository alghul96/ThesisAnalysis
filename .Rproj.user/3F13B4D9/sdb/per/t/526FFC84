{
    "collab_server" : "",
    "contents" : "library(cluster)\nlibrary(stats)\nlibrary(hybridHclust)\n\nclusterdataf = datafexam # select the dataframe to use for clustering\n\n\n#### HIERARCHICAL AGGLOMERATIVE CLUSTER COMPUTATION ####\n\n\ndistances = daisy(clusterdataf, \n                  type = list(asymm = c(1:ncol(clusterdataf))), # threating the variables as asymmetric binaries\n                  metric = \"gower\")\n\n\nComplClusters = hclust(distances, method = \"complete\")\nWardClusters = hclust(distances, method = \"ward.D\") # threating the variables as numeric\n\n\nComplClusters = agnes(distances, diss = TRUE, method = \"complete\")\nWardClusters = agnes(distances, diss = TRUE, method = \"ward\")\n\n\n\n#### IDENTIFYING MOST FOLLOWED COURSES IN CLUSTERS ####\n\n# The following code produces an interactive deindogram showing the most followed\n# exams for each group of variables considered (works only with hclust)\n\n#### Plotting an interactive deindogram to see the courses\n\n# Complete method\nplot(ComplClusters, labels = other_info$immyear, which.plot = 2)\nidentify(ComplClusters, mostFollowed) # click over a branch to see the most followed courses!\n\n# Ward method\nplot(WardClusters, labels = other_info$immyear, which.plot = 2)\nidentify(WardClusters, mostFollowed) # click over a branch to see the most followed courses!\n\n\nhgroup_3 = cutree(WardClusters, k = 3)\n\n# Seeing the groups\nmostFollowed_byclust(hgroup_3)\n\n\n\n### DATA REPRESENTATION ###\n\n#install.packages(\"dendextend\")\n#install.packages(\"circlize\")\nlibrary(dendextend)\nlibrary(circlize)\n\n# create a dendrogram\ndend <- as.dendrogram(WardClusters)\n\n# modify the dendrogram to have some colors in the branches and labels\ndend <- dend %>% \n  color_branches(k=4) %>% \n  color_labels\n\n# plot the radial plot\npar(mar = rep(0,4))\ncirclize_dendrogram(dend, labels_track_height = NA, dend_track_height = .9, labels = FALSE)\n\n\n\n#### NOTES FOR THE PAPER ####\n\n# complete height\nComplClusters$merge[27]\nmin(as.matrix(distances)[\"0000364326\", \"0000366086\"])\n\n# the first unit merged to an already formed cluster was unit 212, at stage 27\nWardClusters$merge[9, ]\nWardClusters$height[9]\nWardClusters$merge[27, ]\nWardClusters$height[27]\n\ncbind(\n  t(clusterdataf[c(129, 165,222),]),\n  apply(clusterdataf[c(129,165),], 2, mean),\n  apply(clusterdataf[c(129,165),], 2, var))\n\n# via euclidean distance\nsqrt(2/3 * sqrt(sum((t(clusterdataf[222,]) -  apply(clusterdataf[c(129,165),], 2, mean))^2)))\n\n\n########################################\n#### HYBRID HIERARCHICAL CLUSTERING ####\n########################################\n\nHybridClusters = hybridHclust(clusterdataf)\n\n\nplot(HybridClusters)\nidentify(HybridClusters, mostFollowed) # click over a branch to see the most followed courses!\n\nhygroup_3 = cutree(HybridClusters, k = 3)\n\ntable(hgroup_3, hygroup_3)\n\n\n\n\n\n#####################################\n##### ON REDUCED DATAFRAME ##########\n#####################################\n\nlibrary(cluster)\nlibrary(stats)\nlibrary(hybridHclust)\n\nclusterdataf = datafexam_reduced\n\ndistances_reduced = daisy(as.factor.dataframe(clusterdataf), \n                          type = list(asymm = c(1:ncol(datafexam_reduced))), # threating the variables as asymmetric binaries\n                          metric = \"gower\")\n\nWardClusters_reduced = hclust(distances_reduced, method = \"ward.D\")\nHybridClusters_reduced =  hybridHclust(clusterdataf)\n\n\nplot(WardClusters_reduced, labels = F)\nidentify(WardClusters_reduced, FUN = mostFollowed)\n\n\nplot(HybridClusters_reduced, labels = F)\nidentify(HybridClusters_reduced, FUN = mostFollowed)\n",
    "created" : 1496771017030.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3778009494",
    "id" : "526FFC84",
    "lastKnownWriteTime" : 1496911895,
    "last_content_update" : 1496911895644,
    "path" : "D:/Box Sync/#UNI/Materiale tesi/Analysis/ThesisAnalysis/R/hierarchicalclust.R",
    "project_path" : "R/hierarchicalclust.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}